<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Friday, August 14, 2009, 6:13 AM -->
<!-- MuClient version 4.93 -->

<!-- Plugin "Consider_Window" generated by Plugin Wizard -->
<!-- Updates Made by Strazor on September 6, 2014
	 1) Updated sPat variable to correctly escape in LUA and capture "-" and "." in mob names
	 2) Updated some of the triggers to regular expressions
	 3) Triggers should now capture Auras of Mobs in Minwin.  This is not perfect but works.
	 4) Put a SPACE in match="\[ Exits\:.+$" to make the consider update work when moving
	 5) Tested on Aardwolf Mudclient R1802 | Mushclient version 4.93 - http://www.aardwolf.com/play/downloadmc.htm -->
<!-- More updates by Kobus November 2017
	* Converted all consider triggers to regex including all possible flags, short or long
	* Replaced a gsub in Adapt_consider with wildcard from the regex
	* Added gsub loop in Adapt_consider for mobs with ?, ! or " in their names (nod Khannon)
	* Triggers now set color and level range variables for the miniwindow
	* Removed for loop in Adapt_consider, no longer needed with color, range variables set by the triggers
	* Removed the consider_messages table as it is no longer needed with color, range set by the triggers
	* Added 2 triggers suggested on the forum for noexp and mob entry on repop
	* Removed call to Adapt_consider when "You see no one here but yourself!"
	* Added 4 triggers for unkillable mobs (for omit only)
	* Added a trigger for mobs already being challenged (omit only)
	* Added a trigger for safe rooms (omit only)
	* Added suggestion on install for the help command 'conw ?'
-->
<!-- Updates by Athlau 2022
	* Added support for custom keywords from Crowley's version of S&D
	* Added cownall commands
	* Fixed triggers enable on plugin load
	* Strikeout killed mobs in the consider window
	* Show mobs health in consider window
	* Added skill/cast execute modes
	* Added combatend option to send consider command
-->
<!-- Updates by Crowley 2024
	* Removed conwallslow after it was deemed illegal by Imms
	* Added MaxRoomCount to allow stacking to that count
	* Modified AOE checks to work with conwall
-->

<muclient>
	<plugin
		name="Aardwolf_Consider_Window"
		author="Blainer"
		id="584807a32cf46af04a1bece3"
		language="Lua"
		purpose="Display clickable consider command output."
		save_state="y"
		date_written="2009-08-14 06:12:14"
		requires="4.43"
		version="2.19"
		>
		<description trim="y">
			<![CDATA[
			Put consider info in a miniwindow with commands.
			Mostly copied from: http://www.gammon.com.au/forum/bbshowpost.php?id=8847
			And: http://www.gammon.com.au/forum/?id=9664
			]]>
		</description>
	</plugin>

<!--  Get our standard constants -->

<include name="constants.lua"/>
<!--  Triggers  -->

<triggers>
	<trigger
		enabled="y"
		regexp="y"
		omit_from_output="y"
		match="^{roomchars}$"
		send_to="12"
		script="RoomCharsStart"
		keep_evaluating="n"
	>
	</trigger>
	<trigger
		enabled="n"
		regexp="y"
		group="roomchars"
		match="^(.*)$"
		send_to="12"
		script="CaptureRoomChar"
		sequence="100"
	>
	</trigger>
	<trigger
		enabled="n"
		regexp="y"
		omit_from_output="y"
		group="roomchars"
		match="^{/roomchars}$"
		send_to="12"
		script="RoomCharsEnd"
		keep_evaluating="y"
		sequence="90"
	>
	</trigger>
    <trigger
        enabled="n"
        group="auto_consider_on_entry"
        match="^Your journey was broken by the need to defend yourself.$"
        omit_from_output="n"
        keep_evaluating="y"
        regexp="y"
        script="Send_consider"
        send_to="12"
        sequence="2"
    >
    </trigger>

	<trigger
		enabled="n"
		regexp="y"
		group="consider"
		match="^(\(.+\) ?)?(.+) looks a little worried about the idea\.$"
		keep_evaluating="y"
		omit_from_output="y"
		script="Adapt_consider"
		sequence="100"
		send_to="12"
		>
		<send>mob_color = "chartreuse"
			mob_range = "-2 to -4"</send>
	</trigger>
	<trigger
		enabled="n"
		regexp="y"
		group="consider"
		match="^(\(.+\) ?)?(.+) says 'BEGONE FROM MY SIGHT unworthy!'$"
		keep_evaluating="y"
		omit_from_output="y"
		script="Adapt_consider"
		sequence="100"
		send_to="12"
		>
		<send>mob_color = "darkviolet"
			mob_range = "+41 to +50"</send>
	</trigger>
	<trigger
		enabled="n"
		regexp="y"
		group="consider"
		match="^(\(.+\) ?)?(.+) should be a fair fight!$"
		keep_evaluating="y"
		omit_from_output="y"
		script="Adapt_consider"
		sequence="100"
		send_to="12"
		>
		<send>mob_color = "springgreen"
			mob_range = "-1 to +1"</send>
	</trigger>
	<trigger
		enabled="n"
		regexp="y"
		group="consider"
		match="^(\(.+\) ?)?(.+) snickers nervously\.$"
		keep_evaluating="y"
		omit_from_output="y"
		script="Adapt_consider"
		sequence="100"
		send_to="12"
		>
		<send>mob_color = "darkgoldenrod"
			mob_range = "+2 to +4"</send>
	</trigger>
	<trigger
		enabled="n"
		group="consider"
		regexp="y"
		match="^(\(.+\) ?)?(.+) would be easy, but is it even worth the work out\?$"
		keep_evaluating="y"
		omit_from_output="y"
		script="Adapt_consider"
		sequence="100"
		send_to="12"
		>
		<send>mob_color = "darkgreen"
			mob_range = "-10 to -19"</send>
	</trigger>
	<trigger
		enabled="n"
		regexp="y"
		group="consider"
		match="^(\(.+\) ?)?(.+) would crush you like a bug!$"
		keep_evaluating="y"
		omit_from_output="y"
		script="Adapt_consider"
		sequence="100"
		send_to="12"
		>
		<send>mob_color = "lightpink"
			mob_range = "+21 to +30"</send>
	</trigger>
	<trigger
		enabled="n"
		group="consider"
		match="^(\(.+\) ?)?(.+) would dance on your grave!$"
		keep_evaluating="y"
		omit_from_output="y"
		regexp="y"
		script="Adapt_consider"
		sequence="100"
		send_to="12"
		>
		<send>mob_color = "darkmagenta"
			mob_range = "+31 to +41"</send>
	</trigger>
	<trigger
		enabled="n"
		group="consider"
		match="^(\(.+\) ?)?Best run away from (.+) while you can!$"
		keep_evaluating="y"
		omit_from_output="y"
		regexp="y"
		script="Adapt_consider"
		sequence="100"
		send_to="12"
		>
		<send>mob_color = "tomato"
			mob_range = "+10 to +15"</send>
	</trigger>
	<trigger
		enabled="n"
		regexp="y"
		group="consider"
		match="^(\(.+\) ?)?Challenging (.+) would be either very brave or very stupid\.$"
		keep_evaluating="y"
		omit_from_output="y"
		script="Adapt_consider"
		sequence="100"
		send_to="12"
		>
		<send>mob_color = "crimson"
			mob_range = "+16 to +20"</send>
	</trigger>
	<trigger
		enabled="n"
		regexp="y"
		group="consider"
		match="^(\(.+\) ?)?No Problem! (.+) is weak compared to you\.$"
		keep_evaluating="y"
		omit_from_output="y"
		script="Adapt_consider"
		sequence="100"
		send_to="12"
		>
		<send>mob_color = "forestgreen"
			mob_range = "-5 to -9"</send>
	</trigger>
	<trigger
		enabled="n"
		group="consider"
		match="^(\(.+\) ?)?You would be completely annihilated by (.+)!$"
		keep_evaluating="y"
		omit_from_output="y"
		regexp="y"
		script="Adapt_consider"
		sequence="100"
		send_to="12"
		>
		<send>mob_color = "magenta"
			mob_range = "+51 and above"</send>
	</trigger>
	<trigger
		enabled="n"
		group="consider"
		match="^(\(.+\) )?You would stomp (.+) into the ground\.$"
		keep_evaluating="y"
		omit_from_output="y"
		regexp="y"
		script="Adapt_consider"
		sequence="100"
		send_to="12"
		>
		<send>mob_color = "gray"
			mob_range = "-20 and below"</send>
	</trigger>
	<trigger
		enabled="n"
		group="consider"
		match="^(\(.+\) ?)?(.+) chuckles at the thought of you fighting"
		keep_evaluating="y"
		omit_from_output="y"
		regexp="y"
		script="Adapt_consider"
		sequence="100"
		send_to="12"
		>
		<send>mob_color = "gold"
			mob_range = "+5 to +9"</send>
	</trigger>
	<trigger
		enabled="n"
		group="consider"
		match="^You see no one here but yourself!$"
		keep_evaluating="y"
		omit_from_output="y"
		regexp="y"
		sequence="100"
		>
	</trigger>
	<trigger
		enabled="n"
		group="consider"
		match="^.+ would smite you for killing .+!$"
		keep_evaluating="y"
		omit_from_output="y"
		regexp="y"
		sequence="100"
		>
	</trigger>
	<trigger
		enabled="n"
		group="consider"
		match="^.+ would not approve of you killing .+!$"
		keep_evaluating="y"
		omit_from_output="y"
		regexp="y"
		sequence="100"
		>
	</trigger>
	<trigger
		enabled="n"
		group="consider"
		match="^.+ has divine protection\.$"
		keep_evaluating="y"
		omit_from_output="y"
		regexp="y"
		sequence="100"
		>
	</trigger>
	<trigger
		enabled="n"
		group="consider"
		match="^.+ has already been challenged\.$"
		keep_evaluating="y"
		omit_from_output="y"
		regexp="y"
		sequence="100"
		>
	</trigger>
	<trigger
		enabled="n"
		group="consider"
		match="^If you killed .+, who would serve"
		keep_evaluating="y"
		omit_from_output="y"
		regexp="y"
		sequence="100"
		>
	</trigger>
	<trigger
		enabled="n"
		group="consider"
		match="^Strange forces prevent violence here\.$"
		keep_evaluating="y"
		omit_from_output="y"
		regexp="y"
		sequence="100"
		>
	</trigger>
	<trigger
		enabled="n"
		group="consider"
		match="^nhm$"
		omit_from_output="y"
		keep_evaluating="n"
		regexp="y"
		script="Consider_end"
		send_to="12"
		sequence="1"
		>
	</trigger>
<!-- triggers for running consider automatically -->
	<trigger
		enabled="n"
		group="auto_consider_on_kill"
		match="^You have set your character to receive no experience points!$"
		omit_from_output="n"
		keep_evaluating="y"
		regexp="y"
		script="Send_consider"
		send_to="12"
		sequence="1"
		>
	</trigger>
	<trigger
		enabled="n"
		group="auto_consider_misc"
		match="^.+ appears in the room\.$"
		omit_from_output="n"
		keep_evaluating="y"
		regexp="y"
		script="Send_consider"
		send_to="12"
		sequence="2"
		>
	</trigger>
	<trigger
		enabled="n"
		group="auto_consider_misc"
		match="^.+ has fled!$"
		omit_from_output="n"
		keep_evaluating="y"
		regexp="y"
		script="Send_consider"
		send_to="12"
		sequence="1"
		>
	</trigger>
	<trigger
		enabled="n"
		group="auto_consider_on_kill"
		match="^You receive .+ experience points\.$"
		omit_from_output="n"
		keep_evaluating="y"
		regexp="y"
		script="Send_consider"
		send_to="12"
		sequence="1"
		>
	</trigger>
<!-- triggers to update killed mobs  -->
	<trigger
		enabled="n"
		group="auto_track_kills"
		match="^(.*) \w+ (?:is|are) DEAD!$"
		omit_from_output="n"
		keep_evaluating="y"
		regexp="y"
		script="Update_kill"
		send_to="12"
		sequence="10"
		>
	</trigger>
	<trigger
		enabled="n"
		group="auto_track_kills"
		match="^(.*) (?:is|are) DEAD!!$"
		omit_from_output="n"
		keep_evaluating="y"
		regexp="y"
		script="Update_kill"
		send_to="12"
		sequence="10"
		>
	</trigger>
	<trigger
		enabled="n"
		group="auto_track_kills"
		match="^(.*) falls dead as \w+ mind is destroyed!!$"
		omit_from_output="n"
		keep_evaluating="y"
		regexp="y"
		script="Update_kill"
		send_to="12"
		sequence="1"
		>
	</trigger>
	<trigger
		enabled="n"
		group="auto_track_kills"
		match="^The voice of god has cleansed (.*) eternally! \w+ is DEAD!$"
		omit_from_output="n"
		keep_evaluating="n"
		regexp="y"
		script="Update_kill"
		send_to="12"
		sequence="1"
		>
	</trigger>
	<trigger
		enabled="n"
		group="auto_track_kills"
		match="^(.*) howls as \w+ last spark of life is drained!!$"
		omit_from_output="n"
		keep_evaluating="y"
		regexp="y"
		script="Update_kill"
		send_to="12"
		sequence="1"
		>
	</trigger>
	<trigger
		enabled="n"
		group="auto_track_kills"
		match="^(.*) turns deadly pale and collapses!!$"
		omit_from_output="n"
		keep_evaluating="y"
		regexp="y"
		script="Update_kill"
		send_to="12"
		sequence="1"
		>
	</trigger>
	<trigger
		enabled="n"
		group="auto_track_kills"
		match="^The mind force crushes (.*) into a bloody pulp! \w+ is DEAD!$"
		omit_from_output="n"
		keep_evaluating="n"
		regexp="y"
		script="Update_kill"
		send_to="12"
		sequence="1"
		>
	</trigger>
	<trigger
		enabled="n"
		group="auto_track_kills"
		match="^(.*) screams in agony as the acid consumes \w+!!$"
		omit_from_output="n"
		keep_evaluating="y"
		regexp="y"
		script="Update_kill"
		send_to="12"
		sequence="1"
		>
	</trigger>
	<trigger
		enabled="n"
		group="auto_track_kills"
		match="^(.*) is damned forever by the holy power!!$"
		omit_from_output="n"
		keep_evaluating="y"
		regexp="y"
		script="Update_kill"
		send_to="12"
		sequence="1"
		>
	</trigger>
	<trigger
		enabled="n"
		group="auto_track_kills"
		match="^(.*) screams as the flames engulf \w+!!$"
		omit_from_output="n"
		keep_evaluating="y"
		regexp="y"
		script="Update_kill"
		send_to="12"
		sequence="1"
		>
	</trigger>
	<trigger
		enabled="n"
		group="auto_track_kills"
		match="^(.*) is battered to death by the force of the water!$"
		omit_from_output="n"
		keep_evaluating="y"
		regexp="y"
		script="Update_kill"
		send_to="12"
		sequence="1"
		>
	</trigger>
	<trigger
		enabled="n"
		group="auto_track_kills"
		match="^(.*) crumbles as \w+ is battered to death!!$"
		omit_from_output="n"
		keep_evaluating="y"
		regexp="y"
		script="Update_kill"
		send_to="12"
		sequence="1"
		>
	</trigger>
	<trigger
		enabled="n"
		group="auto_track_kills"
		match="^(.*) smoulders as the lightning destroys \w+!!$"
		omit_from_output="n"
		keep_evaluating="y"
		regexp="y"
		script="Update_kill"
		send_to="12"
		sequence="1"
		>
	</trigger>
	<trigger
		enabled="n"
		group="auto_track_kills"
		match="^(.*) is slain by a final .*!!$"
		omit_from_output="n"
		keep_evaluating="y"
		regexp="y"
		script="Update_kill"
		send_to="12"
		sequence="1"
		>
	</trigger>
<!-- triggers to update mobs coming to of leaving the room  -->
	<trigger
		enabled="n"
		group="track_mob_moves"
		match="^(.+) (?:skulks|swims|flies|hops|leaves|glides|jets|walks|dashes|slinks|crashes|lopes|floats|wanders|strides|scurries|stumbles|runs|skitters) (?:north|south|east|west|up|down).$"
		omit_from_output="n"
		keep_evaluating="y"
		regexp="y"
		script="Update_mob_left"
		send_to="12"
		sequence="1"
		>
	</trigger>
	<trigger
		enabled="n"
		group="track_mob_moves"
		match="^(.+) (?:skulks|swims|flies|arrives|glides|jets|walks|canters|charging|slinks|crashes|lopes|floats|wanders|strides|scurries|stumbles|runs|skitters) (?:in )?from (?:the )?(?:north|south|east|west|above|below).$"
		omit_from_output="n"
		keep_evaluating="y"
		regexp="y"
		script="Update_mob_came"
		send_to="12"
		sequence="1"
		>
	</trigger>
	<trigger
		enabled="n"
		group="track_mob_moves"
		match="^(?:With a thunderclap, )?(.+) appears in the room\.$"
		omit_from_output="n"
		keep_evaluating="y"
		regexp="y"
		script="Update_mob_came"
		send_to="12"
		sequence="1"
		>
	</trigger>
	<trigger
		enabled="n"
		group="track_mob_moves"
		match="^(.+) has fled!$"
		omit_from_output="n"
		keep_evaluating="y"
		regexp="y"
		script="Update_mob_left"
		send_to="12"
		sequence="1"
		>
	</trigger>
</triggers>
<!-- Aliases -->
<aliases>
	<alias
		script="Conw"
		match="^conw\s(.*)$"
		keep_evaluating="y"
		enabled="y"
		regexp="y"
		send_to="12"
		sequence="100"
		>
	</alias>
	<alias
		script="Send_consider"
		match="^conw$"
		keep_evaluating="y"
		enabled="y"
		regexp="y"
		send_to="12"
		sequence="99"
		>
	</alias>
	<alias
		script="Command_line"
		match="^(\d+)\s+(\w*)$"
		enabled="y"
		regexp="y"
		send_to="12"
		keep_evaluating="y"
		sequence="1"
		>
	</alias>
	<alias
		script="Command_line"
		match="^(\d+)$"
		enabled="y"
		regexp="y"
		send_to="12"
		keep_evaluating="y"
		sequence="1"
		>
	</alias>
	<alias
		script="Conw_all"
		match="^conwall$"
		keep_evaluating="y"
		enabled="y"
		regexp="y"
		send_to="12"
		sequence="99"
		>
	</alias>
	<alias
		script="Conw_all_options"
		match="^conwall options(.*)$"
		keep_evaluating="y"
		enabled="y"
		regexp="y"
		send_to="12"
		sequence="99"
		>
	</alias>
	<alias
		script="Notify_Attack"
		match="conw_notify_attack *"
		enabled="y"
		send_to="12"
		sequence="100"
	>
  </alias>

</aliases>
<!--  Script  -->
<script>
	<![CDATA[
	dofile (GetPluginInfo (GetPluginID(), 20) ..  "Aardwolf_Consider_Miniwin.lua")
	]]>
</script>
</muclient>
